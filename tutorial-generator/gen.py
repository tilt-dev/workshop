#!/usr/bin/env python3

import os
import sys
import pathlib
import shlex
import stat


def _step_num(filename: pathlib.Path):
    try:
        return int(filename.name.split('-', maxsplit=1)[0])
    except ValueError:
        exit(f'invalid instruction filename: {filename.name}')


def _divider():
    return '\n= - = - = - = - = - = - = - = - =\n'


def generate(input_dir: pathlib.Path):
    steps = sorted(input_dir.glob('*-instructions.txt'), key=_step_num)

    tiltfile_name = pathlib.Path('./workshop.tiltfile')
    cmd_file_name = '../workshop.sh'
    resource_name = 'workshop'

    if tiltfile_name.exists():
        os.chmod(tiltfile_name, stat.S_IWUSR | stat.S_IREAD)

    tiltfile = tiltfile_name.open('w', encoding='utf-8')

    header = '# Code generated by Tilt tutorial-generator (https://github.com/tilt-dev/workshop). DO NOT EDIT.\n\n'
    tiltfile.write(header)

    extra_scripts = {
        "api-check.sh": pathlib.Path(__file__).parent.joinpath("api-check.sh").read_text(encoding='utf-8'),
        "welcome.sh": f'printf {shlex.quote(input_dir.joinpath("welcome.txt").read_text(encoding="utf-8"))}\n'
    }
    step_scripts = {}
    i = 1
    for step in steps:
        step_num = _step_num(step)
        script = 'set -x\n\n'
        script = ''

        script += f'printf {shlex.quote(_divider())}\n\n'

        prepare_script_path = step.parent.joinpath(f'{step_num}-prepare.sh')
        if prepare_script_path.exists():
            extra_scripts[prepare_script_path.name] = 'set -x\n\n'
            extra_scripts[prepare_script_path.name] = prepare_script_path.read_text(encoding='utf-8')
            script += f'/usr/bin/env bash "$TILT_WORKSHOP_TMPDIR/{prepare_script_path.name}" >/dev/null\n\n'

        instructions = '\n' + step.read_text(encoding='utf-8').rstrip() + '\n\n'
        # script += 'set +x\n'
        script += f"printf {shlex.quote(instructions)}\n\n"
        # script += 'set -x\n'

        check_script_path = step.parent.joinpath(f'{step_num}-check.sh')
        if check_script_path.exists():
            extra_scripts[check_script_path.name] = 'set-x\n\n'
            extra_scripts[check_script_path.name] = check_script_path.read_text(encoding='utf-8')
            script += f'/usr/bin/env bash "$TILT_WORKSHOP_TMPDIR/{check_script_path.name}"\n\n'

        step_scripts[f'{i}-step.sh'] = script
        i += 1

    tiltfile.write(f'''
def step_scripts():
    return {repr(step_scripts)}
''')

    tiltfile.write(f'''
def extra_scripts():
    return {repr(extra_scripts)}
''')

    # cmds = []
    #
    # with open(cmd_file_name, 'r') as cmd_file:
    #     for line in cmd_file:
    #         quoted_args = ["{}".format(arg) for arg in line.split()]  # maybe eventually shlex.quote()
    #         cmds.append(quoted_args)
    #
    # tiltfile.write('''
    # workflow('workshop',
    #           resource_name='{}',
    #           work_cmds={},
    #           clear_cmd={},
    #     )
    # '''.format(resource_name, cmds, []))

    tiltfile.write(pathlib.Path(__file__).parent.joinpath('base.tiltfile').read_text(encoding='utf-8'))
    tiltfile.close()

    os.chmod(tiltfile_name, stat.S_IREAD | stat.S_IRGRP | stat.S_IROTH)


if __name__ == '__main__':
    if len(sys.argv) != 2:
        exit("usage: gen.py <input_dir>")

    input_dir = sys.argv[1]
    generate(pathlib.Path(input_dir))
